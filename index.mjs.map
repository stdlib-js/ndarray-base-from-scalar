{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from '@stdlib/array-base-arraylike2object' ;\nimport buffer from '@stdlib/ndarray-base-buffer' ;\nimport ndarray from '@stdlib/ndarray-base-ctor' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Returns a zero-dimensional ndarray containing a provided scalar value.\n*\n* @param {*} value - scalar value\n* @param {string} dtype - output array data type\n* @throws {TypeError} second argument must be a recognized data type\n* @returns {ndarray} ndarray\n*\n* @example\n* var x = scalar2ndarray( 1.0, 'float64' );\n* // returns <ndarray>\n*\n* var sh = x.shape;\n* // returns []\n*\n* var dt = x.dtype;\n* // returns 'float64'\n*\n* var v = x.get();\n* // returns 1.0\n*/\nfunction scalar2ndarray( value, dtype ) {\n\tvar buf;\n\tvar o;\n\n\tbuf = buffer( dtype, 1 );\n\tif ( buf === null ) {\n\t\tthrow new TypeError( format( '0MG3J', dtype ) );\n\t}\n\tif ( /^complex/.test( dtype ) && typeof value === 'number' ) {\n\t\tvalue = [ value, 0.0 ]; // note: we're assuming that the ComplexXXArray setter accepts an array of interleaved real and imaginary components\n\t}\n\to = arraylike2object( buf );\n\to.setter( buf, 0, value );\n\treturn new ndarray( dtype, buf, [], [ 0 ], 0, 'row-major' );\n}\n\n\n// EXPORTS //\n\nexport default scalar2ndarray;\n"],"names":["scalar2ndarray","value","dtype","buf","buffer","TypeError","format","test","arraylike2object","setter","ndarray"],"mappings":";;qWAmDA,SAASA,EAAgBC,EAAOC,GAC/B,IAAIC,EAIJ,GAAa,QADbA,EAAMC,EAAQF,EAAO,IAEpB,MAAM,IAAIG,UAAWC,EAAQ,QAASJ,IAOvC,MALK,WAAWK,KAAML,IAA4B,iBAAVD,IACvCA,EAAQ,CAAEA,EAAO,IAEdO,EAAkBL,GACpBM,OAAQN,EAAK,EAAGF,GACX,IAAIS,EAASR,EAAOC,EAAK,GAAI,CAAE,GAAK,EAAG"}